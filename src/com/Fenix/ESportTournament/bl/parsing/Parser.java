package com.Fenix.ESportTournament.bl.parsing;

import com.Fenix.ESportTournament.da.TextWork.TextWriter;
import com.Fenix.ESportTournament.bl.decoration.Beautiful–°onclusion;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

/**
 * –ö–ª–∞—Å —è–∫–∏–π —Ä–µ–∞–ª—ñ–∑—É—î —á–∏—Ç–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Å–∞–π—Ç—É
 */
public class Parser {

   Document doc;
   TextWriter tw = new TextWriter();
   Beautiful–°onclusion bConclusion = new Beautiful–°onclusion();

   /**
    * –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç—É.
    *
    * @param url      –°—Å–∏–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç.
    * @param nameFile –§–∞–π–ª, –∫—É–¥–∏ –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è –¥–∞–Ω—ñ.
    * @param Viue     –ß–∏ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É
    */
   public void Date(String url, String nameFile, boolean Viue) throws IOException {

      // –ü–∞—Ä—Å—ñ–Ω–≥ –¥–∞–Ω–∏—Ö
      doc = Jsoup.connect(url).get();
      Elements blockEl = doc.getElementsByAttributeValue("class", "group_dQEnY");
      Elements blok = doc.select("tr");
      boolean start = false;
      /** –ù–∞–∑–≤–∞ —Ç—É—Ä–Ω—ñ—Ä—É.  */
      String allInformation = "";
      /**–ù–∞–∑–≤–∞ —Ç—É—Ä–Ω—ñ—Ä—É. */
      String name = "";
      /** –°—Ç–∞—Ç—É—Å —Ç—É—Ä–Ω—ñ—Ä—É. */
      String status = "";
      /** –ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥.  */
      String price = "";
      /** –î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è. */
      String date = "";

      for (var el : blok) {
         /** –ó—á–∏—Ç–∞–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è. */
         String nameGamesAllInfo = el.child(0).text();
         String[] nameGames = nameGamesAllInfo.split(",");
         String nameInfo = nameGames[0].toString();
         String[] nameArrey = nameInfo.split(" ", 2);
         try {
            nameArrey = nameInfo.split(" ", 2)[1].split("-");
         } catch (Exception e) {
         }
         try {
            status = nameInfo.split(" ", 2)[0];
            if (status.length() < 1) {
               status = "‚ùî‚ùì‚ùî";
            }
         } catch (Exception e) {
            status = "‚ùî‚ùì‚ùî";
         }
         try {
            name = nameArrey[0];
         } catch (Exception e) {
         }

         price = el.child(1).text();
         date = el.child(5).text();
         if (start == false) {
            status = bConclusion.autoLenghtCenter("–°–¢–ê–¢–£–°", 15, "–°–¢–ê–¢–£–°".length()) + "–°–¢–ê–¢–£–°";
            name = bConclusion.autoLenghtCenter("–ù–ê–ó–í–ê –¢–£–†–ù–Ü–†–£", 70, "–ù–ê–ó–í–ê –¢–£–†–ù–Ü–†–£".length())
                + "–ù–ê–ó–í–ê –¢–£–†–ù–Ü–†–£";
            price = bConclusion.autoLenghtCenter("–í–ò–ì–†–ê–®–ù–ò–ô –§–û–ù–î", 20, "–í–ò–ì–†–ê–®–ù–ò–ô –§–û–ù–î".length())
                + "–í–ò–ì–†–ê–®–ù–ò–ô –§–û–ù–î";
            date = bConclusion.autoLenghtCenter("–î–ê–¢–ê –ü–†–û–í–ï–î–ï–ù–ù–Ø", 25, "–î–ê–¢–ê –ü–†–û–í–ï–î–ï–ù–ù–Ø".length())
                + "–î–ê–¢–ê –ü–†–û–í–ï–î–ï–ù–ù–Ø";
         }

         //–í–∏–≤—ñ–¥ –¥–∞–Ω–∏—Ö
         String a = "üî¥üü¢";
         String rowINfo = "";
         String splitElements = " ";
         try {
            rowINfo = ("|||  " + "üî¥üü¢ " + splitElements + status
                + bConclusion.autoLenght(status, 15) + splitElements + "üò≤üòä " + splitElements
                + name + bConclusion.autoLenght(name, 70) + splitElements + "üí≤üíµüí≤Ô∏è " + splitElements
                + price + bConclusion.autoLenght(price, 20) + splitElements + "‚è±‚åö‚è± " + splitElements
                + date + bConclusion.autoLenght(date, 25) + splitElements + " ||");
            if (Viue) {
               System.out.println(bConclusion.autoLenghtHeightLine(134, "‚©∂"));
               System.out.println(rowINfo);
            }
            allInformation += rowINfo + '\n';
            start = true;
         } catch (Exception e) {
            System.out.println("–û–π, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫!");
         }
      }
      if (Viue) {
         System.out.println(bConclusion.autoLenghtHeightLine(134, "‚©∂") + '\n' + '\n');
      } else {
         System.out.println("üìÅ –î–∞–Ω—ñ —Ñ–∞–π–ª—É: " + nameFile + " –æ–Ω–æ–≤–ª–µ–Ω–æ! ‚úÖ");
      }

      tw.saveData(allInformation, nameFile);
   }
}
